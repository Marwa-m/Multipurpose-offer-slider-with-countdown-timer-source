@model OfferModel
@if (Model.Id > 0)
{
    <div class="panel-body">
        @await Html.PartialAsync("Table", new DataTablesModel
        {
            Name = "products-grid",
            UrlRead = new DataUrl("ProductList", "Offer", new RouteValueDictionary { [nameof(Model.OfferProductSearchModel.OfferId)] = Model.OfferProductSearchModel.OfferId }),
            UrlDelete = new DataUrl("ProductDelete", "Offer", null),
            UrlUpdate = new DataUrl("ProductUpdate", "Offer", null),
            Length = Model.OfferProductSearchModel.PageSize,
            LengthMenu = Model.OfferProductSearchModel.AvailablePageSizes,
            ColumnCollection = new List<ColumnProperty>
{
    new ColumnProperty(nameof(OfferProductModel.ProductName))
    {
        Title = T("Admin.Catalog.Categories.Products.Fields.Product").Text
    },
    new ColumnProperty(nameof(OfferProductModel.DisplayOrder))
    {
        Title = T("Admin.Catalog.Categories.Products.Fields.DisplayOrder").Text,
        Width = "150",
        ClassName = NopColumnClassDefaults.CenterAll,
        Editable = true,
        EditType = EditType.Number
    },
    new ColumnProperty(nameof(OfferProductModel.ProductId))
    {
        Title = T("Admin.Common.View").Text,
        Width = "150",
        ClassName = NopColumnClassDefaults.Button,
        Render = new RenderButtonView(new DataUrl("~/Admin/Product/Edit/", nameof(OfferProductModel.ProductId)))
    },
    new ColumnProperty(nameof(OfferProductModel.Id))
    {
        Title = T("Admin.Common.Edit").Text,
        Width = "200",
        ClassName =  NopColumnClassDefaults.Button,
        Render = new RenderButtonsInlineEdit()
    },
    new ColumnProperty(nameof(OfferProductModel.Id))
    {
        Title = T("Admin.Common.Delete").Text,
        Width = "100",
        Render = new RenderButtonRemove(T("Admin.Common.Delete").Text),
        ClassName = NopColumnClassDefaults.Button
    }
}
        })
    </div>
    <div class="panel-footer">
        <button type="submit" id="btnAddNewProduct"
                onclick="javascript:OpenWindow('@(Url.Action("ProductAddPopup", "Offer", new { offerId = Model.Id, btnId = "btnRefreshProducts", formId = "offer-form" }))', 800, 800, true); return false;"
                class="btn btn-primary">
            @T("Admin.Catalog.Categories.Products.AddNew")
        </button>
        <input type="submit" id="btnRefreshProducts" style="display: none" />
        <script>
            $(document).ready(function () {
                $('#btnRefreshProducts').click(function () {
                    //refresh grid
                    updateTable('#products-grid');

                    //return false to don't reload a page
                    return false;
                });
            });
        </script>
    </div>
}
else
{
    <div class="panel-body">
        @T("Admin.Catalog.Categories.Products.SaveBeforeEdit")
    </div>
}